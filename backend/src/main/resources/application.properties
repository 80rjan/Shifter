# application.properties

# General app config
spring.application.name=Shifter

#spring.datasource.hikari.data-source-properties.useServerPrepStmts=false
#spring.datasource.hikari.data-source-properties.prepareThreshold=0

logging.level.org.springframework.security=DEBUG
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA & Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# Optional HikariCP settings
spring.datasource.hikari.maximum-pool-size=10

# Base API path
api.base.path=/api
api.admin.path=/api/admin

#spring.profiles.active=dev

# Max file size
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=550MB

logging.level.org.springframework.web=DEBUG
logging.level.org.apache.coyote.http11=DEBUG


# PostgreSQL connection
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Amazon S3 configuration
aws.region=${AWS_S3_REGION}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME}
aws.access-key=${AWS_S3_ACCESS_KEY}
aws.secret-key=${AWS_S3_SECRET_KEY}

# JWT Configuration Key
jwt.secret=${JWT_CONFIG_SECRET}

# Email configuration
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub


